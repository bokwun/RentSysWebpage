{"remainingRequest":"E:\\vue_demo\\RentSysWebsite\\node_modules\\babel-loader\\lib\\index.js!E:\\vue_demo\\RentSysWebsite\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue_demo\\RentSysWebsite\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_demo\\RentSysWebsite\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue_demo\\RentSysWebsite\\src\\views\\Login.vue","mtime":1569675060165},{"path":"E:\\vue_demo\\RentSysWebsite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_demo\\RentSysWebsite\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue_demo\\RentSysWebsite\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_demo\\RentSysWebsite\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport store from \"@/store\";\nimport axios from 'axios';\nimport qs from 'qs';\nexport default {\n  data: function data() {\n    return {\n      localIP: this.GLOBAL.localIP,\n      isReg: false,\n      userName: '',\n      password: '',\n      repeatPassword: '',\n      // same为判断隐藏字段是否出现，注册用户名输入栏下,检查注册的名字是否存在\n      same: false,\n      //判断账户密码正确性\n      right: false,\n      // 判断输入栏是否空\n      idempty: false,\n      pwdempty: false,\n      repwdempty: false\n    };\n  },\n  store: store,\n  computed: {\n    //主页点击登录/注册时，由于登录注册一个页面，需给login页面发个值告诉对方\n    //显示登录或者注册页面\n    // 从PageTopBar接收\n    isRegister: {\n      get: function get() {\n        // isRegister = store.state.isRegister\n        return store.state.isRegister;\n      },\n      set: function set() {}\n    }\n  },\n  // 进入界面就执行\n  created: function created() {\n    this.changeIsReg();\n  },\n  methods: {\n    // 只有点击头栏的注册才会传入这个isRegister\n    changeIsReg: function changeIsReg() {\n      // 第一次点击注册跳转到login时，isReg值被改，而isRegister还是true\n      // 这时login页面变成true\n      // 假如此时跳转到其它页面，然后再点击头栏的登录，页面会显示注册状态！！！\n      //\n      this.isReg = this.isRegister; //所以需改变isRegister,原因：再次进入login页面时，只有isRegister能改变isReg值\n      // 这样每次进入login页面或者点击登录都是登录栏，而点击注册必定会跳到注册栏，下面的赋值只会\n      // 对登录有影响\n\n      store.state.isRegister = false;\n    },\n    // 返回首页\n    gobackIndex: function gobackIndex() {\n      this.isReg = false;\n      this.$router.push('/');\n    },\n    // 去注册\n    goReg: function goReg() {\n      this.userName = '';\n      this.password = '';\n      this.isReg = true;\n      this.same = false;\n      this.idempty = false;\n      this.pwdempty = false;\n      this.repwdempty = false;\n      this.right = false;\n    },\n    // 去登录\n    goLog: function goLog() {\n      this.userName = '';\n      this.password = '';\n      this.repeatPassword = '';\n      this.isReg = false;\n      this.same = false;\n      this.idempty = false;\n      this.pwdempty = false;\n      this.repwdempty = false;\n      this.right = false;\n    },\n    // 登录\n    login: function login() {\n      var _this = this;\n\n      this.idempty = false;\n      this.pwdempty = false;\n      this.right = false;\n\n      if (!this.userName) {\n        this.idempty = true;\n      } else if (!this.password) {\n        this.pwdempty = true;\n      } else {}\n\n      if (this.userName && this.password) {\n        var url = \"http://\" + this.localIP + \"/api/checkUser/\" + this.userName;\n        axios.get(url).then(function (response) {\n          if (response.data.person && _this.userName === response.data.person.id && _this.password === response.data.person.password) {\n            var ses = window.sessionStorage; //把接收到的数据解析成json字符串，不然控制台输出[object object]\n\n            var d = JSON.stringify(response.data.person); // 此时ses里面是{id:value, password:value}\n            // sessionStorage.setItem(\"key\", \"value\")\n\n            ses.setItem('data', d);\n\n            _this.$router.push('/');\n          } else {\n            _this.right = true;\n          }\n        }).catch(function (error) {\n          console.log(error);\n          console.log(\"失败！！！\");\n        });\n      }\n    },\n    // 注册\n    reg: function reg() {\n      var _this2 = this;\n\n      this.same = false;\n      this.idempty = false;\n      this.pwdempty = false;\n      this.repwdempty = false;\n\n      if (!this.userName) {\n        this.idempty = true;\n      } else if (!this.password) {\n        this.pwdempty = true;\n      } else if (this.password !== this.repeatPassword) {\n        this.repwdempty = true;\n      } else {}\n\n      if (this.userName && this.password && this.password === this.repeatPassword) {\n        // 用户名去匹配数据库\n        var url = \"http://\" + this.localIP + \"/api/checkUser/\" + this.userName;\n        var url2 = \"http://\" + this.localIP + \"/api/postmsg\";\n        axios.get(url).then(function (response) {\n          if (!response.data.person) {\n            // 提交注册信息\n            var data = qs.stringify({\n              id: _this2.userName,\n              password: _this2.password\n            });\n            axios.post(url2, data, {\n              \"Content-Type\": 'application/x-www-form-urlencoded'\n            }).then(function () {\n              _this2.userName = '';\n              _this2.password = '';\n              _this2.repeatPassword = '';\n              alert(\"注册成功！\");\n              _this2.isReg = false;\n            }).catch(function (error) {\n              console.log(error);\n            });\n          } else {\n            _this2.same = true;\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\r\n  <div class=\"main\">\r\n    <div class=\"loginContent\">\r\n      <!-- 注册 -->\r\n      <div class=\"outregBox\">\r\n        <!-- 返回首页 -->\r\n        <div class=\"gobackIndex\">\r\n          <span @click=\"gobackIndex()\">返回首页</span>\r\n        </div>\r\n        <!-- 没有账户？去注册 -->\r\n        <div class=\"gotoReg\" v-if=\"!isReg\">\r\n          没有账户？<span @click=\"goReg()\">去注册</span>\r\n        </div>\r\n        <div class=\"gotoReg\" v-else>\r\n          已有账户？<span @click=\"goLog()\">去登录</span>\r\n        </div>\r\n      </div>\r\n      <!-- 登录界面 -->\r\n      <div class=\"wrap\">\r\n        <!-- 登录输入框 -->\r\n        <div v-if=\"!isReg\">\r\n          <ul class=\"inputFrame1\">\r\n            <!-- 用户名输入块 -->\r\n            <li class=\"userName1\">\r\n              <input\r\n                type=\"text\"\r\n                value=\"\"\r\n                id=\"usernameUser1\"\r\n                class=\"login-input1\"\r\n                name=\"username\"\r\n                style=\"font-size:20px\"\r\n                maxlength=\"\"\r\n                placeholder=\"手机号/账户名/邮箱\"\r\n                v-model=\"userName\">\r\n              <p v-if=\"idempty\" style=\"color:red\">您还没输入用户名</p>\r\n            </li>\r\n            <!-- 密码输入块 -->\r\n            <li class=\"password1\">\r\n              <input type=\"password\" value=\"\" id=\"passwordUser1\"\r\n                name=\"username\" style=\"font-size:20px\"\r\n                maxlength=\"\" placeholder=\"密码\"\r\n                v-model=\"password\"\r\n              >\r\n              <p v-if=\"pwdempty\" style=\"color:red\">您还没输入密码</p>\r\n              <p v-if=\"right\" style=\"color:red\">用户名或密码不正确</p>\r\n            </li>\r\n            <!-- 登录按钮 -->\r\n            <li class=\"button1\">\r\n              <button\r\n                type=\"button\"\r\n                id=\"btnSubmitUser1\"\r\n                class=\"submit1\"\r\n                @click=\"login()\">登录\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <!-- 注册输入框 -->\r\n        <div v-else>\r\n          <ul class=\"inputFrame2\">\r\n            <!-- 用户名输入块 -->\r\n            <li class=\"userName2\">\r\n              <input\r\n                type=\"text\"\r\n                value=\"\"\r\n                id=\"usernameUser2\"\r\n                class=\"login-input\"\r\n                name=\"username\"\r\n                style=\"font-size:20px\"\r\n                maxlength=\"\"\r\n                placeholder=\"手机号/账户名/邮箱\"\r\n                v-model=\"userName\">\r\n              <p v-if=\"same\" style=\"color:red\">该用户名已存在</p>\r\n              <p v-if=\"idempty\" style=\"color:red\">用户名不能为空</p>\r\n            </li>\r\n            <!-- 密码输入块 -->\r\n            <li class=\"password2\">\r\n              <input type=\"password\" value=\"\" id=\"passwordUser2\"\r\n                name=\"username\" style=\"font-size:20px\"\r\n                maxlength=\"\" placeholder=\"设置密码\"\r\n                v-model=\"password\"\r\n              >\r\n              <p v-if=\"pwdempty\" style=\"color:red\">密码不能为空</p>\r\n            </li>\r\n            <!-- 确认密码输入块 -->\r\n            <li class=\"repeatPassword\">\r\n              <input\r\n                type=\"password\"\r\n                value=\"\"\r\n                id=\"repeatPasswordUser\"\r\n                name=\"username\"\r\n                style=\"font-size:20px\"\r\n                maxlength=\"\"\r\n                placeholder=\"确认密码\"\r\n                v-model=\"repeatPassword\">\r\n              <p v-if=\"repwdempty\" style=\"color:red\">两次输入密码不相同</p>\r\n            </li>\r\n            <!-- 注册按钮 -->\r\n            <li class=\"button2\">\r\n              <button\r\n                type=\"button\"\r\n                id=\"btnSubmitUser2\"\r\n                class=\"submit2\"\r\n                @click=\"reg()\">注册\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport store from \"@/store\"\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\nexport default {\r\n  data () {\r\n    return {\r\n\t  localIP: this.GLOBAL.localIP,\r\n      isReg: false,\r\n      userName: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      // same为判断隐藏字段是否出现，注册用户名输入栏下,检查注册的名字是否存在\r\n      same: false,\r\n      //判断账户密码正确性\r\n      right: false,\r\n      // 判断输入栏是否空\r\n      idempty: false,\r\n      pwdempty: false,\r\n      repwdempty: false,\r\n    }\r\n  },\r\n  store,\r\n  computed: {\r\n    //主页点击登录/注册时，由于登录注册一个页面，需给login页面发个值告诉对方\r\n    //显示登录或者注册页面\r\n    // 从PageTopBar接收\r\n    isRegister : {\r\n      get: function () {\r\n        // isRegister = store.state.isRegister\r\n        return store.state.isRegister\r\n      },\r\n      set: function () {\r\n      }\r\n    }\r\n  },\r\n  // 进入界面就执行\r\n  created () {\r\n    this.changeIsReg()\r\n  },\r\n  methods: {\r\n    // 只有点击头栏的注册才会传入这个isRegister\r\n    changeIsReg () {\r\n      // 第一次点击注册跳转到login时，isReg值被改，而isRegister还是true\r\n      // 这时login页面变成true\r\n      // 假如此时跳转到其它页面，然后再点击头栏的登录，页面会显示注册状态！！！\r\n      //\r\n      this.isReg = this.isRegister\r\n      //所以需改变isRegister,原因：再次进入login页面时，只有isRegister能改变isReg值\r\n      // 这样每次进入login页面或者点击登录都是登录栏，而点击注册必定会跳到注册栏，下面的赋值只会\r\n      // 对登录有影响\r\n      store.state.isRegister = false\r\n    },\r\n    // 返回首页\r\n    gobackIndex () {\r\n      this.isReg = false\r\n      this.$router.push('/')\r\n    },\r\n    // 去注册\r\n    goReg () {\r\n      this.userName= ''\r\n      this.password= ''\r\n      this.isReg = true\r\n      this.same= false\r\n      this.idempty= false\r\n      this.pwdempty= false\r\n      this.repwdempty= false\r\n      this.right= false\r\n    },\r\n    // 去登录\r\n    goLog () {\r\n      this.userName= ''\r\n      this.password= ''\r\n      this.repeatPassword= ''\r\n      this.isReg = false\r\n      this.same= false\r\n      this.idempty= false\r\n      this.pwdempty= false\r\n      this.repwdempty= false\r\n      this.right= false\r\n    },\r\n    // 登录\r\n    login () {\r\n      this.idempty= false\r\n      this.pwdempty= false\r\n      this.right= false\r\n      if (!this.userName) {\r\n        this.idempty= true\r\n      } else if(!this.password) {\r\n        this.pwdempty= true\r\n      } else {\r\n\r\n      }\r\n      if (this.userName && this.password) {\r\n        var url = \"http://\" + this.localIP + \"/api/checkUser/\" + this.userName;\r\n        axios.get(url)\r\n        .then( response => {\r\n          if ( response.data.person && this.userName === response.data.person.id &&\r\n                this.password === response.data.person.password)\r\n          {\r\n            var ses = window.sessionStorage;\r\n            //把接收到的数据解析成json字符串，不然控制台输出[object object]\r\n            var d = JSON.stringify(response.data.person)\r\n            // 此时ses里面是{id:value, password:value}\r\n            // sessionStorage.setItem(\"key\", \"value\")\r\n            ses.setItem('data', d)\r\n            this.$router.push('/');\r\n          } else {\r\n            this.right = true\r\n          }\r\n        })\r\n        .catch( error => {\r\n          console.log(error);\r\n          console.log(\"失败！！！\");\r\n        })\r\n      }\r\n    },\r\n    // 注册\r\n    reg () {\r\n      this.same= false\r\n      this.idempty= false\r\n      this.pwdempty= false\r\n      this.repwdempty= false\r\n      if (!this.userName) {\r\n        this.idempty= true\r\n      } else if (!this.password) {\r\n        this.pwdempty= true\r\n      } else if (this.password !== this.repeatPassword) {\r\n        this.repwdempty= true\r\n      } else {\r\n\r\n      }\r\n      if (this.userName && this.password && this.password === this.repeatPassword) {\r\n        // 用户名去匹配数据库\r\n        var url = \"http://\" + this.localIP + \"/api/checkUser/\" + this.userName;\r\n\t\tvar url2 = \"http://\" + this.localIP + \"/api/postmsg\"\r\n        axios.get(url)\r\n        .then( response => {\r\n            if (!response.data.person) {\r\n              // 提交注册信息\r\n              var data = qs.stringify({\r\n                id : this.userName,\r\n                password : this.password\r\n              })\r\n              axios.post( url2,\r\n                          data,\r\n                          {\"Content-Type\":'application/x-www-form-urlencoded'}\r\n              )\r\n              .then( () => {\r\n                this.userName = ''\r\n                this.password = ''\r\n                this.repeatPassword = ''\r\n                alert(\"注册成功！\")\r\n                this.isReg=false;\r\n              })\r\n              .catch( error => {\r\n                console.log(error);\r\n              })\r\n            } else {\r\n              this.same= true\r\n            }\r\n          }\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.main{\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  background: url('~@/../src/assets/log-bg.jpg') center center no-repeat;\r\n  background-size: 100% 100%;\r\n  overflow: auto;\r\n}\r\n.wrap{\r\n  position: relative;\r\n  padding-top: 38px;\r\n  padding-bottom: 39px;\r\n  margin: 0 auto;\r\n  width: 520px;\r\n  height: 517px;\r\n  background-color: white;\r\n  opacity: 1;\r\n}\r\n.outregBox{\r\n  position: relative;\r\n  margin: 0 auto;\r\n  margin-top: 12px;\r\n  margin-bottom: 10px;\r\n  width: 520px;\r\n  height: 30px;\r\n  display: flex;\r\n}\r\n.outregBox div{\r\n  display: inline;\r\n}\r\n.outregBox div span{\r\n  color: white;\r\n  text-decoration: none;\r\n}\r\n.outregBox div span:hover{\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n.gobackIndex{\r\n  position: absolute;\r\n  left: 0;\r\n}\r\n.gotoReg{\r\n  position: absolute;\r\n  right: 0;\r\n  color: white;\r\n}\r\n.inputFrame1 li{\r\n  list-style-type: none;\r\n  height: 100px;\r\n}\r\n.inputFrame2 li{\r\n  list-style-type: none;\r\n  height: 100px;\r\n}\r\n.inputFrame1, .inputFrame2{\r\n  width: 400px;\r\n  height: 500px;\r\n  margin: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.userName1{\r\n  position: relative;\r\n  top:80px;\r\n  margin-top:10px;\r\n}\r\n.userName2{\r\n  position: relative;\r\n  top:70px;\r\n  margin-top:10px;\r\n}\r\n.password1{\r\n  position: relative;\r\n  top: 100px;\r\n  margin-top:10px;\r\n}\r\n.password2{\r\n  position: relative;\r\n  top: 75px;\r\n  margin-top:10px;\r\n}\r\n.repeatPassword{\r\n  position: relative;\r\n  top: 80px;\r\n  margin-top:10px;\r\n}\r\n.button1{\r\n  position: relative;\r\n  top: 120px;\r\n  margin-top:10px;\r\n}\r\n.button2{\r\n  position: relative;\r\n  top: 90px;\r\n  margin-top:10px;\r\n}\r\n#usernameUser1, #usernameUser2{\r\n  width: 96%;\r\n  height: 50px;\r\n  padding-left: 10px;\r\n  padding-bottom: 5px;\r\n}\r\n#passwordUser1, #passwordUser2, #repeatPasswordUser{\r\n  width: 96%;\r\n  height: 50px;\r\n  padding-left: 10px;\r\n  padding-bottom: 5px;\r\n}\r\n#btnSubmitUser1, #btnSubmitUser2{\r\n  width: 100%;\r\n  height: 50px;\r\n  padding-left: 10px;\r\n  padding-bottom: 5px;\r\n  text-align:center;\r\n  font-size: 18px;\r\n  background-color: #FF552E;\r\n  border: none;\r\n  color: white;\r\n  padding: 1px 6px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}